{"version":3,"sources":["redux/reducers/userReducer.js","redux/reducers/dataReducer.js","redux/reducers/uiReducer.js","redux/store.js","redux/type.js","redux/actions/userActions.js","util/AuthRoute.js","util/CustomButtons.js","redux/actions/dataActions.js","components/post/CreatePost.js","components/layout/Notifications.js","components/layout/Navbar.js","util/PostSkeleton.js","components/post/DeletePost.js","components/post/LikeButton.js","components/post/Comments.js","components/post/CommentForm.js","components/post/PostDialog.js","components/post/Post.js","components/profile/EditDetails.js","util/ProfileSkeleton.js","components/profile/Profile.js","pages/home.js","pages/login.js","pages/signup.js","components/profile/StaticProfile.js","pages/user.js","App.js","serviceWorker.js","index.js","images/no-image.png"],"names":["initialState","authenticated","loading","credentials","likes","notifications","posts","post","errors","middleware","thunk","reducers","combineReducers","user","state","action","type","payload","userHandle","handle","postId","filter","like","forEach","not","read","data","index","findIndex","splice","comments","UI","store","createStore","compose","applyMiddleware","logoutUser","dispatch","localStorage","removeItem","axios","defaults","headers","common","getUserData","get","then","res","catch","err","console","log","setAuthorizationHeader","token","FBIdToken","setItem","connect","Component","component","rest","render","props","to","children","onClick","tip","placement","btnClassName","tipClassName","Tooltip","title","className","IconButton","clearErrors","CreatePost","open","body","handleOpen","setState","handleClose","handleChange","event","target","name","value","handleSubmit","preventDefault","createPost","nextProps","this","classes","CustomButtons","Dialog","onClose","fullWidth","maxWidth","closeButton","DialogTitle","DialogContent","onSubmit","TextField","label","multiline","rows","placeholder","helperText","textField","onChange","Button","variant","color","submitButton","disabled","CircularProgress","size","progressSpinner","newPost","response","withStyles","position","marginTop","marginBottom","float","left","top","Notifications","anchorEl","onMenuOpened","unreadNotificationsIds","map","notificationsId","markNotificationsRead","notificationsIcon","dayjs","extend","relativeTime","length","Badge","badgeContent","notificationsMarkUp","verb","time","createdAt","fromNow","iconColor","icon","style","marginRight","MenuItem","key","Typography","Link","variat","recipient","sender","aria-owns","undefined","aria-haspopup","Menu","Boolean","onEntered","notificationsIds","Navbar","AppBar","Toolbar","theme","card","display","cardContent","width","flexDirection","padding","cover","minWidth","objectFit","height","backgroundColor","date","fullLine","halfLine","content","Array","from","item","Card","CardMedia","image","NoImg","CardContent","DeletePost","deletePost","deleteButton","DialogActions","delete","LikeButton","likedPost","find","likePost","unlikePost","mapActionsToProps","Comments","Grid","container","comment","userImage","sm","src","alt","commentImage","commentData","format","invisibleSeparator","visibleSeparator","customElements","propTypes","PropTypes","array","isRequired","border","margin","borderBottom","borderRadius","marginLeft","CommentForm","submitComment","textAlign","error","button","visibleSeperator","PostDialog","oldPath","newPath","window","location","pathname","history","pushState","getPost","openDialog","likeCount","commentCount","dialogMarkup","spinnerDiv","thickness","spacing","profileImage","expandButton","dialogContent","mapActionToProps","Post","prototypes","object","bool","backgroundPosition","backgroundSize","EditDetails","bio","website","mapsetUserDetailsToState","userDetails","editUserDetails","paper","profile","verticalAlign","cursor","palette","primary","main","Paper","Profile","handleImageChange","files","formData","FormData","append","uploadImage","handleEditPicture","document","getElementById","click","handleLogout","imageUrl","id","hidden","btnclassName","href","rel","align","buttons","home","getPosts","recentPostsMarkup","xs","Login","userData","email","password","loginUser","form","logo","pageTitle","noValidate","general","customError","progress","push","fontSize","Signup","newUserData","confirmPassword","signupUser","match","params","postIdParam","postMarkup","createMuiTheme","secondary","baseURL","decodedToken","jwtDecode","exp","Date","now","App","exact","path","login","signup","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.9259bb4b.chunk.js","sourcesContent":["import { SET_USER, SET_AUTHENTICATED, SET_UNAUTHENTICATED, LOADING_USER, LIKE_POST, UNLIKE_POST, MARK_NOTIFICATIONSREAD} from '../type'\r\n\r\nconst initialState = {\r\n    authenticated: false,\r\n    loading: false,\r\n    credentials: {},\r\n    likes: [],\r\n    notifications: []\r\n}\r\n\r\nexport default function( state = initialState, action) { //initialState is the default value\r\n    switch(action.type) {\r\n        case SET_AUTHENTICATED: //action types tapos do something\r\n            return {\r\n                ...state, //spread the state because u user is authenticated and do something\r\n                authenticated: true //then change the value\r\n            };\r\n        case SET_UNAUTHENTICATED:\r\n            return initialState; //not authenticated so go back to initial\r\n        case SET_USER:\r\n            return {\r\n                authenticated: true,\r\n                loading: false,\r\n                ...action.payload // this will bind evryting likes notif etc all credentials\r\n            };\r\n        case LOADING_USER:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case LIKE_POST:\r\n            return {\r\n                ...state,\r\n                likes: [\r\n                    ...state.likes,\r\n                    {\r\n                        userHandle: state.credentials.handle,\r\n                        postId: action.payload.postId\r\n                    }\r\n                ]\r\n            }\r\n        case UNLIKE_POST:\r\n            return {\r\n                ...state,\r\n                likes: state.likes.filter(\r\n                    (like) => like.postId !== action.payload.postId\r\n                )\r\n            };\r\n        case MARK_NOTIFICATIONSREAD:\r\n            state.notifications.forEach( not => not.read = true ) ;\r\n            return {\r\n                ...state\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_POSTS, LIKE_POST, UNLIKE_POST, LOADING_DATA, DELETE_POST, CREATE_POST, SET_POST, SUBMIT_COMMENT } from '../type';\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: {},\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case SET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: action.payload,\r\n                loading: false\r\n            }\r\n        case SET_POST:\r\n            return {\r\n                 ...state,\r\n                 post: action.payload\r\n             }\r\n        case LIKE_POST:\r\n        case UNLIKE_POST:\r\n            let index = state.posts.findIndex((post) => post.postId === action.payload.postId);\r\n            state.posts[index] = action.payload;\r\n            if(state.post.postId === action.payload.postId) {\r\n                state.post = action.payload;\r\n            }\r\n            return {\r\n                ...state\r\n            };\r\n        case DELETE_POST:\r\n            index = state.posts.findIndex( post => post.postId === action.payload);\r\n            state.posts.splice(index, 1);\r\n            return {\r\n                ...state\r\n            }\r\n        case CREATE_POST:\r\n            return {\r\n                ...state,\r\n                posts: [\r\n                    action.payload,\r\n                    ...state.posts\r\n                ]\r\n            }\r\n        case SUBMIT_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: {\r\n                    ...state.post,\r\n                    comments: [action.payload, ...state.post.comments]\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_ERRORS, CLEAR_ERRORS, LOADING_UI, STOP_LOADING_UI } from '../type'\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    errors: null,\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SET_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: action.payload\r\n            };\r\n        case CLEAR_ERRORS: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: null\r\n            };\r\n        case LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case STOP_LOADING_UI:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport userReducer from './reducers/userReducer';\r\nimport dataReducer from './reducers/dataReducer';\r\nimport uiReducer from './reducers/uiReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers ({\r\n    user: userReducer,\r\n    data: dataReducer,\r\n    UI: uiReducer\r\n});\r\n\r\nconst store = createStore( \r\n    reducers, \r\n    initialState, \r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;","// USER REDUCER TYPES\r\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\r\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\r\nexport const SET_USER = 'SET_USER';\r\nexport const LOADING_USER = 'LOADING_USER';\r\nexport const MARK_NOTIFICATIONSREAD = 'MARK_NOTIFICATIONSREAD';\r\n\r\n\r\n// UI REDUCER TYPES\r\nexport const SET_ERRORS = 'SET_ERRORS';\r\nexport const LOADING_UI = 'LOADING_UI';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\nexport const LOADING_DATA = 'LOADING_DATA';\r\nexport const STOP_LOADING_UI= 'STOP_LOADING_UI';\r\n\r\n// DATA REDUCER TYPES\r\nexport const SET_POSTS = 'SET_POSTS';\r\nexport const SET_POST = 'SET_POST';\r\nexport const CREATE_POST = 'CREATE_POST';\r\nexport const LIKE_POST = 'LIKE_POST';\r\nexport const UNLIKE_POST = 'UNLIKE_POST';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const SUBMIT_COMMENT = 'SUBMIT_COMMENT';","import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_UNAUTHENTICATED, LOADING_USER, MARK_NOTIFICATIONSREAD } from '../type'\r\nimport axios from 'axios';\r\n\r\n//login action\r\nexport const loginUser = (userData, history) => (dispatch) => { //dispatch need because of asynchrous data\r\n    dispatch ({ type: LOADING_UI});\r\n    axios\r\n        .post('/login', userData)\r\n        .then(res => {\r\n            setAuthorizationHeader(res.data.token)\r\n            dispatch(getUserData());\r\n            dispatch({ type: CLEAR_ERRORS });\r\n            history.push('/home');\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        });\r\n}\r\n\r\n//signup action\r\nexport const signupUser = (newUserData, history) => (dispatch) => { //dispatch need because of asynchrous data\r\n    dispatch ({ type: LOADING_UI});\r\n    axios\r\n        .post('/signup', newUserData)\r\n        .then(res => {\r\n            setAuthorizationHeader(res.data.token)\r\n            dispatch(getUserData());\r\n            dispatch({ type: CLEAR_ERRORS });\r\n            history.push('/home');\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        });\r\n}\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    localStorage.removeItem('FBIdToken');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    dispatch({ type: SET_UNAUTHENTICATED });\r\n}\r\n\r\nexport const getUserData = () => (dispatch) => { //6:22:48 back\r\n    dispatch({ type: LOADING_USER });\r\n    axios.get('/user')\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_USER,\r\n                payload: res.data //some data that will send in reducer and reducer do something with it\r\n            })\r\n        })\r\n        .catch((err) => console.log(err));\r\n}\r\n\r\nexport const uploadImage = (formData) => (dispatch) => {\r\n    dispatch({ type: LOADING_USER});\r\n    axios.post('/user/image', formData)\r\n        .then(() => {\r\n            dispatch(getUserData());\r\n        })\r\n        .catch (err => console.log(err));\r\n}\r\n\r\nexport const editUserDetails = (userDetails) => (dispatch) => {\r\n    dispatch({ type: LOADING_USER }); //axios to communicate in db\r\n    axios\r\n        .post('/user', userDetails)\r\n        .then(() => {\r\n            dispatch(getUserData());\r\n        })\r\n        .catch((err) => console.log(err));\r\n};\r\n\r\nexport const markNotificationsRead = ( notificationsIds ) => dispatch => {\r\n    axios.post( 'notifications', notificationsIds )\r\n        .then((res) => {\r\n            dispatch ({\r\n                type: MARK_NOTIFICATIONSREAD\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n//set authorization header\r\nexport const setAuthorizationHeader = (token) => {\r\n    const FBIdToken = `Bearer ${token}`;\r\n    localStorage.setItem('FBIdToken', FBIdToken);\r\n    axios.defaults.headers.common['Authorization'] = FBIdToken;\r\n}","import React from 'react' //rfc because its functional\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render = {(props) => authenticated === true \r\n            ? <Redirect to = '/home' /> \r\n            : <Component {...props} />\r\n        }\r\n    />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authenticated: state.user.authenticated\r\n})\r\n\r\nAuthRoute.propTypes = {\r\n    user: PropTypes.object\r\n}\r\n\r\nexport default connect(mapStateToProps)(AuthRoute);","import React from 'react'\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport default ({ children, onClick, tip, placement, btnClassName, tipClassName }) => (\r\n    <Tooltip title={tip} placement={placement} className={tipClassName}>\r\n        <IconButton onClick={onClick} className={btnClassName}>\r\n            {children}\r\n        </IconButton>\r\n    </Tooltip>\r\n);","import { SET_POSTS, LOADING_DATA, LIKE_POST, UNLIKE_POST, DELETE_POST, LOADING_UI, CLEAR_ERRORS, SET_ERRORS, CREATE_POST, SET_POST, STOP_LOADING_UI, SUBMIT_COMMENT } from '../type'\r\nimport axios from 'axios';\r\n\r\n//get posts\r\nexport const getPosts = () => dispatch => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.get('/posts')\r\n        .then(res => {\r\n            dispatch ({\r\n                type: SET_POSTS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_POSTS,\r\n                payload: []\r\n            });\r\n        });\r\n};\r\n\r\n//get 1 post\r\nexport const getPost = (postId) => dispatch => {\r\n    dispatch({ type: LOADING_UI});\r\n    axios.get(`/post/${postId}`)\r\n        .then(res => {\r\n            dispatch ({\r\n                type: SET_POST,\r\n                payload: res.data\r\n            });\r\n            dispatch({ type: STOP_LOADING_UI })\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n//Create a Post\r\nexport const createPost = (newPost) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios.post('/post', newPost)\r\n        .then(res => {\r\n            dispatch ({\r\n                type: CREATE_POST,\r\n                payload: res.data\r\n            })\r\n            dispatch(clearErrors())\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        })\r\n}\r\n\r\n//like post\r\nexport const likePost = (postId) => dispatch => {\r\n    axios.get(`/post/${postId}/like`)\r\n        .then(res => {\r\n            dispatch ({\r\n                type: LIKE_POST,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => console.log(err));\r\n}\r\n\r\n//unlike Post\r\nexport const unlikePost = (postId) => dispatch => {\r\n    axios.get(`/post/${postId}/unlike`)\r\n        .then(res => {\r\n            dispatch ({\r\n                type: UNLIKE_POST,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((err) => console.log(err));\r\n}\r\n\r\n//submit a comment\r\nexport const submitComment = (postId, commentData) => (dispatch) => {\r\n    axios.post(`/post/${postId}/comment`, commentData)\r\n        .then(res => {\r\n            dispatch ({\r\n                type: SUBMIT_COMMENT,\r\n                payload: res.data,\r\n            })\r\n            dispatch(clearErrors());\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        })\r\n}\r\n\r\nexport const deletePost = (postId) => (dispatch) => {\r\n    axios.delete(`/post/${postId}`)\r\n        .then(() => {\r\n            dispatch({ type: DELETE_POST, payload: postId})\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const getUserData = (userHandle) => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.get(`/user/${userHandle}`)\r\n        .then((res) => {\r\n            dispatch ({\r\n                type: SET_POSTS,\r\n                payload: res.data.posts\r\n            });\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: SET_POSTS,\r\n                payload: null\r\n            })\r\n        })\r\n}\r\n\r\nexport const clearErrors = () => dispatch => {\r\n    dispatch({ type: CLEAR_ERRORS });\r\n}","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CustomButtons from '../../util/CustomButtons'\r\n\r\n//materialui dialog imports\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n//material UI icons\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\n//redux\r\nimport { connect } from 'react-redux'\r\nimport { createPost, clearErrors } from '../../redux/actions/dataActions'\r\n\r\nconst styles = {\r\n    \r\n    submitButton:{\r\n        // marginTop: '10px',\r\n        position: 'relative',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        float: 'right'\r\n    },\r\n    progressSpinner: {\r\n        position: 'absolute'\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left: '91%',\r\n        top: '6%'\r\n    }\r\n}\r\n\r\nclass CreatePost extends Component {\r\n    state = {\r\n        open: false,\r\n        body: '',\r\n        errors: []\r\n    };\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.UI.errors) {\r\n            this.setState({\r\n                errors: nextProps.UI.errors\r\n            });\r\n        };\r\n        if(!nextProps.UI.errors && !nextProps.UI.loading) {\r\n            this.setState({ body: '', open: false, errors: {}});\r\n        }\r\n    }\r\n    handleOpen = () => {\r\n        this.setState({ open: true })\r\n    };\r\n    handleClose = () => {\r\n        this.props.clearErrors();\r\n        this.setState({ open: false, errors: {} })\r\n    };\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name ]: event.target.value })\r\n    };\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.createPost({ body: this.state.body });\r\n    };\r\n    \r\n    render() {\r\n        const { errors } = this.state;\r\n        const { classes, UI:{ loading } } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <CustomButtons onClick={this.handleOpen} tip=\"Create a post\">\r\n                    <AddIcon/>\r\n                </CustomButtons>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                    <CustomButtons tip=\"close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\r\n                        <CloseIcon/>\r\n                    </CustomButtons>\r\n                    <DialogTitle>Add a new post</DialogTitle>\r\n                    <DialogContent>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <TextField\r\n                                name=\"body\"\r\n                                type=\"text\"\r\n                                label=\"Post!\"\r\n                                multiline\r\n                                rows=\"3\"\r\n                                placeholder=\"Share what you think\"\r\n                                errors={errors.body ? true : false }\r\n                                helperText={errors.body}\r\n                                className={classes.textField}\r\n                                onChange={this.handleChange}\r\n                                fullWidth\r\n                                />\r\n                                <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.submitButton} disabled={loading}>\r\n                                    Submit\r\n                                    {loading && (\r\n                                        <CircularProgress size={30} className={classes.progressSpinner}/>\r\n                                    )}\r\n                                </Button>\r\n                        </form>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nCreatePost.propTypes = {\r\n    createPost: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI\r\n})\r\n\r\nexport default connect(mapStateToProps, {createPost, clearErrors})(withStyles(styles)(CreatePost))","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\n\r\n//material ui\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\n//Icons\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport { markNotificationsRead } from '../../redux/actions/userActions';\r\n\r\nclass Notifications extends Component {\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleOpen = (event) => {\r\n        this.setState({ anchorEl: event.target });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    }\r\n\r\n    onMenuOpened = () => {\r\n        let unreadNotificationsIds = this.props.notifications\r\n            .filter((not) => !not.read)\r\n            .map((not) => not.notificationsId);\r\n        this.props.markNotificationsRead(unreadNotificationsIds)\r\n    }\r\n\r\n    render() {\r\n        const notifications = this.props.notifications;\r\n        const anchorEl = this.state.anchorEl;\r\n\r\n        dayjs.extend(relativeTime)\r\n\r\n        let notificationsIcon;\r\n        if  (notifications && notifications.length > 0 ) {\r\n            notifications.filter((not) => not.read === false ).length > 0\r\n                ? (notificationsIcon = (\r\n                    <Badge badgeContent = { notifications.filter((not) => not.read === false).length \r\n                    }\r\n                        color=\"secondary\">\r\n                            <NotificationsIcon/>\r\n                        </Badge>\r\n                )) \r\n                : ( notificationsIcon = <NotificationsIcon/> )\r\n        } else {\r\n            notificationsIcon = <NotificationsIcon/>\r\n        }\r\n\r\n        let notificationsMarkUp =\r\n            notifications && notifications.length > 0 ? (\r\n                notifications.map ((not) => {\r\n                    const verb = not.type === 'like' ? 'liked' : 'commented on';\r\n                    const time = dayjs(not.createdAt).fromNow();\r\n                    const iconColor = not.read ? 'primary' : 'secondary';\r\n                    const icon = \r\n                        not.type === 'like' ? (\r\n                            <FavoriteIcon color={iconColor} style={{ marginRight: 10 }}/>\r\n                        ) : (\r\n                            <ChatIcon color={iconColor} style={{ marginRight: 10 }}/>\r\n                        )\r\n\r\n                    return (\r\n                        <MenuItem key={not.createdAt} onClick={this.handleClose}>\r\n                            {icon}\r\n                            <Typography\r\n                                component={Link}\r\n                                color=\"default\"\r\n                                variat=\"body1\"\r\n                                to={`users/${not.recipient}/post/${not.postId}`}\r\n                                >\r\n                                    {not.sender} {verb} your post {time}\r\n                                </Typography>\r\n\r\n                        </MenuItem>\r\n                    )\r\n                })\r\n            ) : (\r\n                <MenuItem onClick = {this.handleClose}>\r\n                    You have no notifications yet\r\n                </MenuItem>\r\n            )\r\n\r\n        return (\r\n            <Fragment>\r\n                <Tooltip placement=\"top\" title=\"Notifications\">\r\n                    <IconButton \r\n                        aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n                        aria-haspopup=\"true\"\r\n                        onClick={this.handleOpen} >\r\n                            {notificationsIcon}\r\n                        </IconButton>\r\n                </Tooltip>\r\n                <Menu\r\n                    anchorEl = {anchorEl}\r\n                    open = {Boolean(anchorEl)}\r\n                    onClose = {this.handleClose}\r\n                    onEntered = {this.onMenuOpened}\r\n                    >\r\n                        {notificationsMarkUp}\r\n                    </Menu>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nNotifications.propTypes = {\r\n    markNotificationsRead: PropTypes.func.isRequired,\r\n    notifications: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    notifications: state.user.notifications\r\n})\r\n\r\nexport default connect(mapStateToProps, { markNotificationsRead })(Notifications)\r\n\r\n\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport CustomButtons from '../../util/CustomButtons'\r\nimport CreatePost from '../post/CreatePost'\r\nimport Notifications from './Notifications'\r\n\r\n//material ui stuff import them one by one compile will be easier\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n//Icons\r\nimport HomeIcon from '@material-ui/icons/Home'\r\n\r\n\r\nexport class Navbar extends Component {\r\n    render() {\r\n        const { authenticated } = this.props\r\n        return (\r\n            <AppBar>\r\n                <Toolbar className=\"nav-container\">\r\n                {authenticated ? (\r\n                    //authenticated  whill show this nav\r\n                <Fragment>\r\n                    <CreatePost/>\r\n                    <Link to=\"/home\">\r\n                        <CustomButtons tip=\"Home\" placement=\"top\">\r\n                            <HomeIcon />\r\n                        </CustomButtons>\r\n                    </Link>\r\n\r\n                        <Notifications />\r\n\r\n                </Fragment>\r\n                ) : ( //else\r\n                <Fragment>\r\n                    <Button color=\"inherit\" component={Link} to=\"/login\">Login</Button>\r\n                    <Button color=\"inherit\" component={Link} to=\"/\">Home</Button>\r\n                    <Button color=\"inherit\" component={Link} to=\"/signup\">Signup</Button>\r\n                </Fragment>\r\n                )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        )\r\n    }\r\n}\r\n\r\nNavbar.propTypes = {\r\n    authenticated: PropTypes.bool.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    authenticated: state.user.authenticated\r\n})\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Fragment } from 'react';\r\nimport NoImg from '../images/no-image.png'\r\nimport PropTypes from 'prop-types';\r\n\r\n//material-ui\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nconst styles = theme => ({\r\n    card: {\r\n        display: 'flex',\r\n        marginBottom: 20,\r\n    },\r\n\r\n    cardContent: {\r\n        width: '100%',\r\n        flexDirection: 'column',\r\n        padding: 25\r\n    },\r\n\r\n    cover: {\r\n        minWidth: 200,\r\n        objectFit: 'cover',\r\n    },\r\n\r\n    handle: {\r\n        width: 60,\r\n        height: 20,\r\n        backgroundColor: '#00897b',\r\n        marginBottom: 7\r\n    },\r\n\r\n    date: {\r\n        height: 14,\r\n        width: 100,\r\n        backgroundColor: 'rgba(0,0,0, 0.3)',\r\n        marginBottom: 10\r\n    },\r\n\r\n    fullLine: {\r\n        height: 15,\r\n        width: '90%',\r\n        backgroundColor: 'rgba(0,0,0, 0.6)',\r\n        marginBottom: 10\r\n    },\r\n\r\n    halfLine: {\r\n        height: 15,\r\n        width: '50%',\r\n        backgroundColor: 'rgba(0,0,0, 0.6)',\r\n        marginBottom: 10\r\n    }\r\n});\r\n\r\nconst PostSkeleton = (props) => {\r\n    const { classes } = props;\r\n\r\n    const content = Array.from({ length: 5 }).map((item, index) => (\r\n    <Card className={classes.card} key={index}>\r\n      <CardMedia className={classes.cover} image={NoImg} />\r\n      <CardContent className={classes.cardContent}>\r\n        <div className={classes.handle} />\r\n        <div className={classes.date} />\r\n        <div className={classes.fullLine} />\r\n        <div className={classes.fullLine} />\r\n        <div className={classes.halfLine} />\r\n      </CardContent>\r\n    </Card>\r\n    ));\r\n\r\n    return <Fragment>{content}</Fragment>;\r\n}\r\n\r\nPostSkeleton.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(PostSkeleton);\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CustomButtons from '../../util/CustomButtons'\r\n\r\n//material ui imports\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { deletePost } from '../../redux/actions/dataActions'\r\n\r\nconst styles = {\r\n    deleteButton: {\r\n        position: 'absolute',\r\n        left: '90%',\r\n        top: '10%',\r\n        color: 'red'\r\n    }\r\n}\r\n\r\nclass DeletePost extends Component {\r\n    state= {\r\n        open: false\r\n    };\r\n    handleOpen = () => {\r\n        this.setState ({ open: true });\r\n    }\r\n    handleClose = () => {\r\n        this.setState ({ open: false });\r\n    }\r\n    deletePost = () => {\r\n        this.props.deletePost(this.props.postId)\r\n        this.setState ({ open: false });\r\n    }\r\n    render() {\r\n        const { classes } = this.props\r\n        return (\r\n           <Fragment>\r\n               <CustomButtons tip=\"Delete Post\" onClick={this.handleOpen}\r\n               btnClassName={classes.deleteButton}>\r\n                   <DeleteOutline color=\"secondary\"/>\r\n               </CustomButtons>\r\n\r\n               <Dialog open={this.state.open} onClose={this.state.handleClose}\r\n               fullWidth maxWidth=\"sm\">\r\n                   <DialogTitle>\r\n                       Are you sure to delete this post?\r\n                   </DialogTitle>\r\n                   <DialogActions>\r\n                       <Button onClick={this.handleClose} color=\"primary\">Cancel</Button>\r\n                       <Button onClick={this.deletePost} color=\"secondary\">Delete</Button>\r\n                   </DialogActions>\r\n               </Dialog>\r\n           </Fragment>\r\n        )\r\n    }\r\n}\r\nDeletePost.propTypes = {\r\n    deletePost: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    postId: PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(null, {deletePost})(withStyles(styles)(DeletePost));\r\n","import React, { Component } from 'react';\r\nimport CustomButtons from '../../util/CustomButtons';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n//icos\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { likePost, unlikePost } from '../../redux/actions/dataActions';\r\n\r\n\r\nexport class LikeButton extends Component {\r\n    \r\n    likedPost = () => {\r\n        if (\r\n            this.props.user.likes && \r\n            this.props.user.likes.find\r\n            (like => like.postId === this.props.postId))\r\n                return true;\r\n                else\r\n                return false;\r\n            }\r\n            likePost = () => {\r\n                this.props.likePost(this.props.postId);\r\n            }\r\n            unlikePost = () => {\r\n                this.props.unlikePost(this.props.postId);\r\n            };\r\n\r\n    render() {\r\n        const { authenticated } = this.props.user;\r\n        const likeButton = !authenticated ? (\r\n            <Link to=\"login\">\r\n                <CustomButtons tip=\"Like\">\r\n                    <FavoriteBorder color=\"primary\"/>\r\n                </CustomButtons>\r\n            </Link>\r\n        ) : this.likedPost() ? (\r\n                <CustomButtons tip=\"Unlike\" onClick={this.unlikePost}>\r\n                    <FavoriteIcon color=\"primary\"/>\r\n                </CustomButtons>\r\n            ) : (\r\n                <CustomButtons tip=\"Like\" onClick={this.likePost}>\r\n                    <FavoriteBorder color=\"primary\"/>\r\n                </CustomButtons>\r\n            );\r\n\r\n        return likeButton\r\n    }\r\n}\r\n\r\nLikeButton.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    postId: PropTypes.string.isRequired,\r\n    likePost: PropTypes.func.isRequired,\r\n    unlikePost: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n})\r\n\r\nconst  mapActionsToProps = {\r\n    likePost,\r\n    unlikePost\r\n}\r\n\r\nexport default connect (mapStateToProps, mapActionsToProps)(LikeButton);\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n\r\n//Material UI\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst styles = (theme) => ({\r\n\r\n    invisibleSeparator: {\r\n        border: \"none\",\r\n        margin: 4\r\n    },\r\n    \r\n    visibleSeparator: {\r\n        width: '100%',\r\n        borderBottom: '1px solid rgba(0,0,0,0.1)',\r\n        marginBottom: '20px'\r\n    },\r\n    \r\n    commentImage: {\r\n        maxWidth: '100%',\r\n        height: 100,\r\n        objectFit: 'cover',\r\n        borderRadius: '50%',//make it round\r\n    },\r\n\r\n    commentData: {\r\n        marginLeft: 20\r\n    }\r\n})\r\n\r\nclass Comments extends Component {\r\n    render(){\r\n        const { comments, classes } = this.props;\r\n\r\n        return (\r\n            <Grid container>\r\n                {comments.map((comment, index) => {\r\n                    const { body, createdAt, userImage, userHandle } = comment;\r\n                    return(\r\n                        <Fragment key={createdAt}>\r\n                            <Grid item sm={12}>\r\n                                <Grid container>\r\n                                    <Grid item sm={2}>\r\n                                        <img src={userImage} alt=\"comment\" className={classes.commentImage}/>\r\n                                    </Grid>\r\n\r\n                                    <Grid item sm={9}>\r\n                                        <div className={classes.commentData}>\r\n                                            <Typography variant=\"h5\" component={Link} to={`/users/${userHandle}`} color=\"primary\">\r\n                                                {userHandle}\r\n                                            </Typography>\r\n\r\n                                             <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n                                            </Typography>\r\n                                            <hr className={classes.invisibleSeparator}/>\r\n                                            <Typography variant=\"body1\">{body}</Typography>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            {index !== comments.length -1 && (\r\n                                <hr className={classes.visibleSeparator}/>\r\n                            )}\r\n                        </Fragment>\r\n                    )\r\n                })}\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n}\r\n\r\ncustomElements.propTypes = {\r\n    comments: PropTypes.array.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Comments);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\n//Material ui stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n//redux stuff\r\nimport { connect } from 'react-redux'\r\nimport { submitComment } from '../../redux/actions/dataActions'\r\n\r\nconst styles = theme => ({\r\n \r\n    visibleSeparator: {\r\n        width: '100%',\r\n        borderBottom: '1px solid rgba(0,0,0,0.1)',\r\n        marginBottom: '20px'\r\n    },\r\n    \r\n    button: {\r\n        marginTop: '10px',\r\n        position: 'absolute'\r\n    }\r\n})\r\n\r\nexport class CommentForm extends Component {\r\n\r\n    state = {\r\n        body: \"\",\r\n        errors: {}\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.UI.errors){\r\n            this.setState({errors: nextProps.UI.errors})\r\n        }\r\n        if(!nextProps.UI.errors && !nextProps.UI.loading){\r\n            this.setState({ body: ''})\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.submitComment(this.props.postId, { body: this.state.body})\r\n    }\r\n    render() {\r\n        const { classes, authenticated } = this.props;\r\n        const errors = this.state.errors;\r\n\r\n        const commentFormMarkup = authenticated ? (\r\n            <Grid item sm={12} style={{ textAlign: 'center' }}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <TextField\r\n                        name=\"body\"\r\n                        type=\"text\"\r\n                        label=\"Comment on this post\"\r\n                        error={errors.comment ? true : false}\r\n                        helperText={errors.comment}\r\n                        value={this.state.body}\r\n                        onChange={this.handleChange}\r\n                        width=\"75%\"\r\n                        className={classes.textField}/>\r\n                        \r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.button}\r\n                        style={{position: \"relative\"}}>\r\n                            Submit\r\n                        </Button>\r\n                </form>\r\n                <br/>\r\n                <hr className={classes.visibleSeperator} />\r\n            </Grid>\r\n        ) : null\r\n        return commentFormMarkup\r\n    }\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    submitComment: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    postId: PropTypes.string.isRequired,\r\n    authenticated: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    UI: state.UI,\r\n    authenticated: state.user.authenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { submitComment })(withStyles(styles)(CommentForm));\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CustomButtons from '../../util/CustomButtons';\r\nimport LikeButton  from './LikeButton';\r\nimport Comments from './Comments';\r\nimport CommentForm from './CommentForm';\r\n\r\n\r\n\r\nimport dayjs from 'dayjs';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//materialui dialog imports\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n//material UI icons\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { getPost, clearErrors } from '../../redux/actions/dataActions';\r\n\r\nconst styles = {\r\n\r\n    invisibleSeparator: {\r\n        border: \"none\",\r\n        margin: 4\r\n    },\r\n    \r\n    visibleSeparator: {\r\n        width: '100%',\r\n        borderBottom: '1px solid rgba(0,0,0,0.1)',\r\n        marginBottom: '20px'\r\n    },\r\n\r\n    profileImage: {\r\n        maxWidth: 200,\r\n        height: 200,\r\n        borderRadius: '50%',\r\n        objectFit: 'cover'\r\n    },\r\n\r\n    dialogContent: {\r\n        padding: 20\r\n    },\r\n\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left: '90%'\r\n    },\r\n    expandButton: {\r\n        position: 'absolute',\r\n        left: '90%'\r\n    },\r\n    spinnerDiv: {\r\n        textAlign: 'center',\r\n        marginTop: 50,\r\n        marginBottom: 50\r\n    }\r\n\r\n}\r\n\r\nclass PostDialog extends Component {\r\n    state = {\r\n        open: false,\r\n        oldPath: '',\r\n        newPath: '',\r\n    }\r\n    componentDidMount () {\r\n        if ( this.props.openDialog ) {\r\n            this.handleOpen();\r\n        }\r\n    }\r\n    handleOpen = () => {\r\n        let oldPath = window.location.pathname;\r\n\r\n        const { userHandle, postId } = this.props;\r\n        const newPath = `/users/${userHandle}/post/${postId}`;\r\n\r\n        if( oldPath === newPath ) oldPath = `/users/${userHandle}`;\r\n\r\n        window.history.pushState(null, null, newPath);\r\n\r\n\r\n        this.setState({ open: true , oldPath, newPath }) //put old and new path on state to access in both open and close im so bright\r\n        this.props.getPost(this.props.postId)\r\n    };\r\n    handleClose = () => {\r\n        window.history.pushState(null, null, this.state.oldPath)\r\n        this.setState({ open: false })\r\n        this.props.clearErrors();\r\n    };\r\n\r\n\r\n    render() {\r\n        const { classes, post: {postId, body, createdAt, likeCount, commentCount, userImage, userHandle, comments}, UI: { loading }}\r\n        = this.props\r\n\r\n        const dialogMarkup = loading ? (\r\n            <div className={classes.spinnerDiv}>\r\n                <CircularProgress size={200} thickness={2}/>\r\n            </div>\r\n        ) : (\r\n            <Grid container spacing={16}>\r\n                <Grid item sm={5}>\r\n                    <img src={userImage} alt=\"Profile\" className={classes.profileImage}/>\r\n                </Grid>\r\n\r\n                <Grid item sm={7}>\r\n                    <Typography component={Link} color=\"primary\" variant=\"h5\" to={`/users/${userHandle}`}>\r\n                        @{userHandle}\r\n                    </Typography>\r\n                    <hr className={classes.invisibleSeparator} />\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n                    </Typography>\r\n                    <hr className={classes.invisibleSeparator} />\r\n                    <Typography variant=\"body1\">\r\n                        {body}\r\n                    </Typography>\r\n\r\n                        {/* like and comment button */}\r\n                    <LikeButton postId={postId}/>\r\n                    <span>{likeCount} likes</span>\r\n                    <CustomButtons tip=\"comments\">\r\n                        <ChatIcon color=\"primary\"/>\r\n                    </CustomButtons>\r\n                    <span>{commentCount} comments</span>\r\n                </Grid>\r\n                {/* <hr className={classes.visibleSeparator}/> */}\r\n                <CommentForm postId={postId}/>\r\n                <Comments comments={comments}/>\r\n            </Grid>\r\n        )\r\n        return (\r\n            <Fragment>\r\n                <CustomButtons onClick={this.handleOpen} tip=\"See Post\" tipClassName={classes.expandButton}>\r\n                    <UnfoldMore color=\"primary\"/>\r\n                </CustomButtons>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth=\"sm\">\r\n                    <CustomButtons tip=\"close\" onClick={this.handleClose} tipClassName={classes.closeButton}>\r\n                        <CloseIcon/>\r\n                    </CustomButtons>\r\n\r\n                    <DialogContent className={classes.dialogContent}>\r\n                        {dialogMarkup}\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }       \r\n}\r\n\r\nPostDialog.propTypes = {\r\n    getPost: PropTypes.func.isRequired,\r\n    postId: PropTypes.string.isRequired,\r\n    userHandle: PropTypes.string.isRequired,\r\n    post: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.data.post,\r\n    UI: state.UI\r\n})\r\n\r\nconst mapActionToProps = {\r\n    getPost,\r\n    clearErrors\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(PostDialog));","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CustomButtons from '../../util/CustomButtons';\r\nimport DeletePost from './DeletePost';\r\nimport PostDialog from './PostDialog';\r\nimport LikeButton from './LikeButton';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//redux stuff\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n//material ui imports\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n//icons\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n\r\n//daysjs less size\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\n\r\n\r\nconst styles = {\r\n    card: {\r\n        display: 'flex',\r\n        marginBottom: 20,\r\n        position: 'relative'\r\n    },\r\n    image: {\r\n        minWidth: 200,\r\n        backgroundPosition: 'center center',\r\n        backgroundSize: 'cover',\r\n    },\r\n    content: {\r\n        padding: 25,\r\n        objectFit: 'cover'\r\n    }\r\n}\r\n\r\nclass Post extends Component {\r\n\r\n    render() {\r\n        dayjs.extend(relativeTime)\r\n            const {classes, post : {\r\n                body, \r\n                createdAt, \r\n                userImage, \r\n                userHandle,\r\n                postId, \r\n                likeCount,\r\n                commentCount,\r\n            },\r\n                user: {\r\n                    authenticated, credentials: {handle}\r\n                }\r\n            } = this.props\r\n\r\n            const deleteButton = authenticated && userHandle === handle ? (\r\n                <DeletePost postId={postId}/>\r\n            ) : null\r\n        return (\r\n           <Card className={classes.card}>\r\n               <CardMedia \r\n               className={classes.image}\r\n               image={userImage} \r\n               title=\"Profile Image\"/>\r\n\r\n               <CardContent className={classes.content}>\r\n                    <Typography \r\n                    variant=\"h5\" \r\n                    component={Link} \r\n                    to={`/users/${userHandle}`} \r\n                    color=\"primary\">{userHandle}</Typography>\r\n                    {deleteButton}\r\n                    <Typography \r\n                    variant=\"body2\" \r\n                    color=\"textSecondary\">{dayjs(createdAt).fromNow()}</Typography>\r\n                    \r\n                    <Typography variant=\"body1\">{body}</Typography>\r\n\r\n                    <LikeButton postId={postId}/>\r\n\r\n                    <span>{likeCount}</span>\r\n                    <CustomButtons tip=\"comments\">\r\n                        <ChatIcon color=\"primary\"/>\r\n                    </CustomButtons>\r\n                    <span>{commentCount} comments</span>\r\n                    <PostDialog postId={postId} userHandle={userHandle} openDialog={this.props.openDialog}/>\r\n               </CardContent>\r\n           </Card>\r\n        )\r\n    }\r\n}\r\nPost.prototypes = {\r\n    user: PropTypes.object.isRequired,\r\n    post: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    openDialog: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n})\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Post));\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CustomButtons from '../../util/CustomButtons'\r\n\r\n//redux\r\nimport { connect } from 'react-redux'\r\nimport { editUserDetails } from '../../redux/actions/userActions'\r\n\r\n//materialui dialog imports\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n//icons\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst styles = (theme) => ({\r\n    button : {\r\n        float: 'right'\r\n    }\r\n})\r\n\r\nclass EditDetails extends Component {\r\n        state = {\r\n            bio: '',\r\n            website: '',\r\n            location: '',\r\n            open: false\r\n        };\r\n        mapsetUserDetailsToState = (credentials) => {\r\n            this.setState({\r\n                bio: credentials.bio ? credentials.bio: '',\r\n                website: credentials.website ? credentials.website: '',\r\n                location: credentials.location ? credentials.location: ''\r\n            })\r\n        };\r\n        handleOpen = (credentials) => {\r\n            this.setState({ open: true });\r\n            this.mapsetUserDetailsToState(credentials);\r\n        }\r\n        handleClose = () => {\r\n            this.setState({ open: false });\r\n        }\r\n        handleSubmit = () => {\r\n            const userDetails = {\r\n                bio: this.state.bio,\r\n                website: this.state.website,\r\n                location: this.state.location\r\n            }\r\n            this.props.editUserDetails(userDetails);\r\n            this.handleClose();\r\n        }\r\n        handleChange = (event) => {\r\n            this.setState({\r\n                [event.target.name]: event.target.value\r\n            })\r\n        }\r\n        componentDidMount() {\r\n            const { credentials } = this.props;\r\n            this.mapsetUserDetailsToState(credentials);\r\n        }\r\n        \r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <CustomButtons tip=\"Edit Details\" placement=\"top\" onClick={this.handleOpen} btnClassName={classes.button}>\r\n                    <EditIcon color=\"primary\"/>\r\n                </CustomButtons>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth  maxWidth=\"sm\">\r\n                    <DialogTitle>Edit your detials</DialogTitle>\r\n                        <DialogContent>\r\n                            <form>\r\n                                <TextField name=\"bio\" type=\"text\" label=\"Bio\" multiline rows=\"3\" placeholder=\"a short bio about you\"\r\n                                className={classes.TextField} value={this.state.bio} onChange={this.handleChange} fullWidth />\r\n\r\n                                <TextField name=\"website\" type=\"text\" label=\"Website\" placeholder=\"your personal website\"\r\n                                className={classes.TextField} value={this.state.website} onChange={this.handleChange} fullWidth />\r\n\r\n                                <TextField name=\"location\" type=\"text\" label=\"Location\" placeholder=\"Where you live\"\r\n                                className={classes.TextField} value={this.state.location} onChange={this.handleChange} fullWidth />\r\n                            </form>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n                            <Button onClick={this.handleSubmit} color=\"primary\">\r\n                                Save\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nEditDetails.propTypes = {\r\n    editUserDetails: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    credentials: state.user.credentials\r\n})\r\n\r\nexport default connect(mapStateToProps, { editUserDetails })(withStyles(styles)(EditDetails));\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport NoImg from '../images/no-image.png'\r\n\r\n//material ui\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\n//icons\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport CalendarToday from '@material-ui/icons/CalendarToday';\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        padding: 20\r\n      },\r\n      profile: {\r\n        '& .image-wrapper': {\r\n          textAlign: 'center',\r\n          position: 'relative',\r\n          '& button': {\r\n            position: 'absolute',\r\n            top: '80%',\r\n            left: '70%'\r\n          }\r\n        },\r\n        '& .profile-image': {\r\n          width: 200,\r\n          height: 200,\r\n          objectFit: 'cover',\r\n        //   maxWidth: '100%',\r\n          borderRadius: '50%'\r\n        },\r\n        '& .profile-details': {\r\n          textAlign: 'center',\r\n          '& span, svg': {\r\n            verticalAlign: 'middle'\r\n          },\r\n          '& a': {\r\n            color: '#00bcd4'\r\n          }\r\n        },\r\n        '& hr': {\r\n          border: 'none',\r\n          margin: '0 0 10px 0'\r\n        },\r\n        '& svg.button': {\r\n          '&:hover': {\r\n            cursor: 'pointer'\r\n          }\r\n        }\r\n      },\r\n      handle: {\r\n        height: 20,\r\n        backgroundColor: theme.palette.primary.main,\r\n        width: 60,\r\n        margin: '0 auto 7px auto'\r\n      },\r\n      fullLine: {\r\n        height: 15,\r\n        backgroundColor: 'rgba(0,0,0,0.6)',\r\n        width: '100%',\r\n        marginBottom: 10\r\n      },\r\n      halfLine: {\r\n        height: 15,\r\n        backgroundColor: 'rgba(0,0,0,0.6)',\r\n        width: '50%',\r\n        marginBottom: 10\r\n      }\r\n});\r\n\r\nconst ProfileSkeleton = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <div className={classes.profile}>\r\n                <div className=\"image-wrapper\">\r\n                    <img src={NoImg} alt=\"profile\" className=\"profile-image\" />\r\n                </div>\r\n                <hr/>\r\n                <div className=\"profile-details\">\r\n                    <div className={classes.handle}/>\r\n                    <hr/>\r\n                    <div className={classes.fullLine}/>\r\n                    <div className={classes.fullLine}/>\r\n                    <hr/>\r\n                    <LocationOn color=\"primary\"/> <span>Location</span>\r\n                    <hr/>\r\n                    <LinkIcon color=\"primary\"/> .......\r\n                    <CalendarToday color=\"primary\"/> Joined date\r\n\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nProfileSkeleton.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(ProfileSkeleton);\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport {Link} from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport EditDetails from './EditDetails';\r\nimport CustomButtons from '../../util/CustomButtons'\r\n\r\nimport ProfileSkeleton from '../../util/ProfileSkeleton'\r\n\r\n\r\n//redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser, uploadImage } from '../../redux/actions/userActions'\r\n\r\n\r\n//MaterialUI stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport MuiLink from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\n//icons\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport CalendarToday from '@material-ui/icons/CalendarToday';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport KeyboardReturn from '@material-ui/icons/KeyboardReturn';\r\n\r\nconst styles = (theme) => ({\r\n    paper: {\r\n        padding: 20\r\n      },\r\n      profile: {\r\n        '& .image-wrapper': {\r\n          textAlign: 'center',\r\n          position: 'relative',\r\n          '& button': {\r\n            position: 'absolute',\r\n            top: '80%',\r\n            left: '70%'\r\n          }\r\n        },\r\n        '& .profile-image': {\r\n          width: 200,\r\n          height: 200,\r\n          objectFit: 'cover',\r\n          maxWidth: '100%',\r\n          borderRadius: '50%'\r\n        },\r\n        '& .profile-details': {\r\n          textAlign: 'center',\r\n          '& span, svg': {\r\n            verticalAlign: 'middle'\r\n          },\r\n          '& a': {\r\n            color: '#00bcd4'\r\n          }\r\n        },\r\n        '& hr': {\r\n          border: 'none',\r\n          margin: '0 0 10px 0'\r\n        },\r\n        '& svg.button': {\r\n          '&:hover': {\r\n            cursor: 'pointer'\r\n          }\r\n        }\r\n      },\r\n      buttons: {\r\n        textAlign: 'center',\r\n        '& a': {\r\n          margin: '20px 10px'\r\n        }\r\n      }\r\n});\r\n\r\nclass Profile extends Component {\r\n\r\n    handleImageChange = (event) => {\r\n        const image = event.target.files[0];\r\n        //send to serve\r\n        const formData = new FormData();\r\n        formData.append('image', image, image.name); //name => value => blob\r\n        this.props.uploadImage(formData);\r\n    };\r\n    handleEditPicture = () => {\r\n        const fileInput = document.getElementById('imageInput');\r\n        fileInput.click();\r\n    }\r\n    handleLogout = () => {\r\n        this.props.logoutUser();\r\n    }\r\n    render() {\r\n        const {\r\n        classes,\r\n        user: {\r\n            credentials: { handle, createdAt, imageUrl, bio, website, location},\r\n            loading,\r\n            authenticated\r\n            }\r\n        } = this.props;\r\n        \r\n        let profileMarkup = !loading ? (authenticated ? (\r\n            <Paper className={classes.paper}>\r\n                <div className={classes.profile}>\r\n                    <div className=\"image-wrapper\">\r\n                        <img src={imageUrl} alt=\"profile\" className=\"profile-image\"/>\r\n                        <input \r\n                            type=\"file\" \r\n                            id=\"imageInput\" \r\n                            hidden=\"hidden\"\r\n                            onChange={this.handleImageChange}\r\n                        />\r\n                        <CustomButtons tip=\"Edit profile picture\" onClick={this.handleEditPicture} btnclassName=\"button\">\r\n                            <EditIcon color=\"primary\"/>\r\n                        </CustomButtons>\r\n                    </div>\r\n                    <hr/>\r\n                    \r\n                    <div className=\"profile-details\">\r\n                        <MuiLink component={Link} to={`/users/${handle}`} color=\"primary\" variant=\"h5\">\r\n                            {handle}\r\n                        </MuiLink>\r\n                    <hr/>\r\n                        {bio && <Typography variant=\"body1\">{bio}</Typography>}\r\n                    <hr/>\r\n                        {location && (\r\n                            // fragment react elements that wraps things idk hahah\r\n                            <Fragment> \r\n                                <LocationOn color=\"primary\"/> <span>{location}</span>\r\n                            <hr/>\r\n                            </Fragment>\r\n                        )}\r\n                        {website && (\r\n                            <Fragment>\r\n                                <LinkIcon color=\"primary\"/>\r\n                                <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                    {' '}{website}\r\n                                </a>\r\n                                <hr/>\r\n                            </Fragment>\r\n                        )}\r\n                        <CalendarToday color=\"primary\"/> {' '}\r\n                        <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\r\n                    </div>\r\n                    {/* logout button */}\r\n                    <CustomButtons tip=\"Logout\" placement=\"top\" onClick={this.handleLogout}>\r\n                        <KeyboardReturn color=\"primary\"/>\r\n                    </CustomButtons>\r\n                    {/* edit details */}\r\n                    <EditDetails/>\r\n                </div>\r\n            </Paper>\r\n        ) : (\r\n            <Paper className={classes.paper}>\r\n                <Typography variant=\"body2\" align=\"center\">\r\n                    no profile found, please login!\r\n                </Typography>\r\n                <div className={classes.buttons}>\r\n                    <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/login\">\r\n                        Login\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" component={Link} to=\"/Signup\">\r\n                        Signup\r\n                    </Button>\r\n                </div>\r\n            </Paper>\r\n        )) : (\r\n            <ProfileSkeleton/>\r\n        )\r\n\r\n        return profileMarkup\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n});\r\n\r\nconst mapActionToProps = { logoutUser, uploadImage };\r\n\r\nProfile.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    uploadImage: PropTypes.func.isRequired,\r\n    logoutUser: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps,mapActionToProps)(withStyles(styles)(Profile));\r\n","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport PostSkeleton from '../util/PostSkeleton'\r\n\r\nimport Post from '../components/post/Post'\r\nimport Profile from '../components/profile/Profile'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getPosts } from '../redux/actions/dataActions'\r\n\r\nclass home extends Component {\r\n    componentDidMount() {\r\n        this.props.getPosts();\r\n    }\r\n    render() {\r\n        const { posts, loading } = this.props.data;\r\n        let recentPostsMarkup = !loading ? (\r\n            posts.map((post) => <Post key={post.postId} post={post}/>)\r\n            ): (\r\n                <PostSkeleton/>\r\n            );\r\n        return (\r\n            <Grid container spacing={10}>\r\n                <Grid item sm={8} xs={12}>\r\n                    {recentPostsMarkup}\r\n                </Grid>\r\n\r\n                {/* profile */}\r\n                <Grid item sm={4} xs={12}>\r\n                    <Profile/>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nhome.propTypes = {\r\n    getPosts: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.data\r\n})\r\n\r\nexport default connect(mapStateToProps, {getPosts})(home);\r\n","import React, { Component } from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//material ui stuff\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n//redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../redux/actions/userActions'\r\n\r\n//fix it to make globaly\r\nconst styles = {\r\n    form: {\r\n        textAlign: 'center'\r\n      },\r\n      logo: {\r\n          margin: '20px auto 20px auto'\r\n      },\r\n      pageTitle: {\r\n          margin: '10px auto 10px auto'\r\n      },\r\n      textField: {\r\n          margin: '10px auto 10px auto'\r\n      },\r\n      button: {\r\n          marginTop: 20,\r\n          position: 'relative'\r\n      },\r\n      customError: {\r\n          color: 'red',\r\n          fontSize: '.8rem',\r\n          marginTop: 10\r\n      },\r\n      progress: {\r\n          position: 'absolute',\r\n          color: 'black'\r\n      }\r\n    }\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            errors: []\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.UI.errors) {\r\n            this.setState({ errors: nextProps.UI.errors});\r\n        }\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n        this.props.loginUser(userData, this.props.history); //passed from action loginUser function then history to redirect\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    \r\n    render() {\r\n\r\n        const { classes, UI: {loading}} = this.props; //gets theloading inside UI\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm/>\r\n                <Grid item sm>\r\n                    <h4 className={classes.logo}>VlogThat</h4>\r\n                    <Typography variant=\"h2\" className={classes.pageTitle}>\r\n                        Login\r\n                    </Typography>\r\n\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField \r\n                            id=\"email\" \r\n                            name=\"email\" \r\n                            type=\"email\" \r\n                            label=\"Email\" \r\n                            className={classes.textField}\r\n                            helperText={errors.email}\r\n                            error={errors.email ? true : false}\r\n                            value={this.state.email} \r\n                            onChange={this.handleChange} \r\n                            fullWidth/>\r\n                        \r\n                        <TextField \r\n                            id=\"password\" \r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            label=\"Password\" \r\n                            className={classes.textField}\r\n                            value={this.state.password} \r\n                            onChange={this.handleChange} \r\n                            helperText={errors.password}\r\n                            error={errors.password ? true : false}\r\n                            fullWidth/>\r\n                        \r\n                        {errors.general && (\r\n                            <Typography variant=\"body2\" className={classes.customError}>\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n                        <Button \r\n                            type=\"submit\" \r\n                            variant=\"contained\" \r\n                            color=\"primary\" \r\n                            className={classes.button}\r\n                            disabled={loading}>\r\n                                LOGIN \r\n                                {loading && (\r\n                                    <CircularProgress size={30} className={classes.progress}/>\r\n                                )}\r\n                        </Button>\r\n                        <br/>\r\n                        <small>dont have an account ? sign up <Link to=\"/signup\">here</Link></small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm/>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nLogin.propTypes = { //all props types\r\n    classes: PropTypes.object.isRequired,\r\n    loginUser: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ //state from reducer doesnt need data because this is the login\r\n    user: state.user,\r\n    UI: state.UI\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    loginUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)\r\n(withStyles(styles)(Login));\r\n","import React, { Component } from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//material ui stuff\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n//REDUX STUFF\r\nimport { connect } from 'react-redux'\r\nimport { signupUser } from '../redux/actions/userActions'\r\n\r\n//fix it to make globaly\r\nconst styles = {\r\n    form: {\r\n        textAlign: 'center'\r\n      },\r\n      logo: {\r\n          margin: '20px auto 20px auto'\r\n      },\r\n      pageTitle: {\r\n          margin: '10px auto 10px auto'\r\n      },\r\n      textField: {\r\n          margin: '10px auto 10px auto'\r\n      },\r\n      button: {\r\n          marginTop: 20,\r\n          position: 'relative'\r\n      },\r\n      customError: {\r\n          color: 'red',\r\n          fontSize: '.8rem',\r\n          marginTop: 10\r\n      },\r\n      progress: {\r\n          position: 'absolute',\r\n          color: 'black'\r\n      }\r\n    }\r\n\r\nclass Signup extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword:'',\r\n            userHandle: '',\r\n            // loading: false,\r\n            errors: []\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.UI.errors) {\r\n            this.setState({ errors: nextProps.UI.errors});\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        const newUserData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n            handle: this.state.handle\r\n        };\r\n        this.props.signupUser(newUserData, this.props.history)\r\n        // axios.post('/signup', newUserData)\r\n        //     .then(res => {\r\n        //         console.log(res.data);\r\n        //         localStorage.setItem('FBIdToken', `Bearer ${res.data.token}`);\r\n        //         this.setState({\r\n        //             loading: false\r\n        //         });\r\n        //         this.props.history.push('/home');\r\n        //     })\r\n        //     .catch(err => {\r\n        //         this.setState({\r\n        //             errors: err.response.data,\r\n        //             loading: false\r\n        //         })\r\n        //     })\r\n    }\r\n    render() {\r\n\r\n        const {classes, UI: {loading} } = this.props;\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm/>\r\n                <Grid item sm>\r\n                    <h4 className={classes.logo}>VlogThat</h4>\r\n                    <Typography variant=\"h2\" className={classes.pageTitle}>\r\n                        Signup\r\n                    </Typography>\r\n\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField \r\n                            id=\"email\" \r\n                            name=\"email\" \r\n                            type=\"email\" \r\n                            label=\"Email\" \r\n                            className={classes.textField}\r\n                            helperText={errors.email}\r\n                            error={errors.email ? true : false}\r\n                            value={this.state.email} \r\n                            onChange={this.handleChange} \r\n                            fullWidth/>\r\n                        \r\n                        <TextField \r\n                            id=\"password\" \r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            label=\"Password\" \r\n                            className={classes.textField}\r\n                            value={this.state.password} \r\n                            onChange={this.handleChange} \r\n                            helperText={errors.password}\r\n                            error={errors.password ? true : false}\r\n                            fullWidth/>\r\n\r\n                        <TextField \r\n                            id=\"confirmPassword\" \r\n                            name=\"confirmPassword\" \r\n                            type=\"password\" \r\n                            label=\"Confirm Password\" \r\n                            className={classes.textField}\r\n                            value={this.state.confirmPassword} \r\n                            onChange={this.handleChange} \r\n                            helperText={errors.confirmPassword}\r\n                            error={errors.confirmPassword ? true : false}\r\n                            fullWidth/>\r\n\r\n                        <TextField \r\n                            id=\"handle\" \r\n                            name=\"handle\" \r\n                            type=\"text\" \r\n                            label=\"Your display name\" \r\n                            className={classes.textField}\r\n                            value={this.state.handle} \r\n                            onChange={this.handleChange} \r\n                            helperText={errors.handle}\r\n                            error={errors.handle ? true : false}\r\n                            fullWidth/>\r\n                        \r\n                        {errors.general && (\r\n                            <Typography variant=\"body2\" className={classes.customError}>\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n                        <Button \r\n                            type=\"submit\" \r\n                            variant=\"contained\" \r\n                            color=\"primary\" \r\n                            className={classes.button}\r\n                            disabled={loading}>\r\n                                Signup \r\n                                {loading && (\r\n                                    <CircularProgress size={30} className={classes.progress}/>\r\n                                )}\r\n                        </Button>\r\n                        <br/>\r\n                        <small>already have an account ? Login <Link to=\"/login\">here</Link></small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm/>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nSignup.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    signupUser: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI\r\n})\r\n   \r\nexport default connect(mapStateToProps, { signupUser })(withStyles(styles)(Signup));\r\n","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport dayjs from 'dayjs'\r\n\r\n//material Ui\r\nimport MuiLink from '@material-ui/core/Link'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Paper from '@material-ui/core/Paper'\r\n//icons\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport CalendarToday from '@material-ui/icons/CalendarToday';\r\n\r\nconst styles = (theme) => ({\r\n    paper: {\r\n        padding: 20\r\n      },\r\n      profile: {\r\n        '& .image-wrapper': {\r\n          textAlign: 'center',\r\n          position: 'relative',\r\n        },\r\n        '& .profile-image': {\r\n          width: 200,\r\n          height: 200,\r\n          objectFit: 'cover',\r\n          maxWidth: '100%',\r\n          borderRadius: '50%'\r\n        },\r\n        '& .profile-details': {\r\n          textAlign: 'center',\r\n          '& span, svg': {\r\n            verticalAlign: 'middle'\r\n          },\r\n          '& a': {\r\n            color: '#00bcd4'\r\n          }\r\n        },\r\n        '& hr': {\r\n          border: 'none',\r\n          margin: '0 0 10px 0'\r\n        }\r\n      }\r\n});\r\n\r\nconst StaticProfile = (props) => {\r\n    const {\r\n      classes,\r\n      profile: { handle, createdAt, imageUrl, bio, website, location }\r\n    } = props;\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <div className={classes.profile}>\r\n                <div className=\"image-wrapper\">\r\n                    <img src={imageUrl} alt=\"profile\" className=\"profile-image\"/>\r\n                </div>\r\n                <hr/>\r\n                \r\n                <div className=\"profile-details\">\r\n                    <MuiLink component={Link} to={`/users/${handle}`} color=\"primary\" variant=\"h5\">\r\n                        {handle}\r\n                    </MuiLink>\r\n                <hr/>\r\n                    {bio && <Typography variant=\"body1\">{bio}</Typography>}\r\n                <hr/>\r\n                    {location && (\r\n                        // fragment react elements that wraps things idk hahah\r\n                        <Fragment> \r\n                            <LocationOn color=\"primary\"/> <span>{location}</span>\r\n                        <hr/>\r\n                        </Fragment>\r\n                    )}\r\n                    {website && (\r\n                        <Fragment>\r\n                            <LinkIcon color=\"primary\"/>\r\n                            <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                {' '}{website}\r\n                            </a>\r\n                            <hr/>\r\n                        </Fragment>\r\n                    )}\r\n                    <CalendarToday color=\"primary\"/> {' '}\r\n                    <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nStaticProfile.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(StaticProfile);","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport Post from '../components/post/Post';\r\nimport StaticProfile from '../components/profile/StaticProfile'\r\n\r\n//loading\r\nimport PostSkeleton from '../util/PostSkeleton'\r\nimport ProfileSkeleton from '../util/ProfileSkeleton'\r\n\r\n//material ui\r\nimport Grid from '@material-ui/core/grid';\r\n\r\n//reduxx\r\nimport { connect } from 'react-redux';\r\nimport { getUserData } from '../redux/actions/dataActions';\r\n\r\nclass user extends Component {\r\n    state= {\r\n        profile: null,\r\n        postId: null\r\n    };\r\n    componentDidMount() {\r\n        const handle = this.props.match.params.handle;\r\n        const postId = this.props.match.params.postId;\r\n\r\n        if( postId ) this.setState({ postIdParam: postId });\r\n\r\n        this.props.getUserData(handle);\r\n        axios\r\n            .get(`/user/${handle}`)\r\n            .then((res) => {\r\n                this.setState({\r\n                    profile: res.data.user\r\n                })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    render() {\r\n        const { posts, loading } = this.props.data\r\n        const { postIdParam } = this.state;\r\n\r\n        const postMarkup = loading ? (\r\n            <PostSkeleton/>\r\n        ) : posts === null ? (\r\n            <p>This user has no post yet</p>\r\n        ) : !postIdParam ? (\r\n            posts.map(post => <Post key={post.postId} post={post}/>)\r\n        ) : (\r\n            posts.map(post => {\r\n                if ( post.postId !== postIdParam )\r\n                    return <Post key={post.postId} post={post}/>\r\n                else return <Post key={post.postId} post={post} openDialog/>\r\n            })\r\n        )\r\n        return (\r\n            <Grid container spacing={10}>\r\n                <Grid item sm={8} xs={12}>\r\n                    {postMarkup}\r\n                </Grid>\r\n\r\n                {/* profile */}\r\n                <Grid item sm={4} xs={12}>\r\n                    {this.state.profile === null ? (\r\n                        <ProfileSkeleton/>\r\n                    ) : (\r\n                    <StaticProfile profile={this.state.profile}/>\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nuser.propTypes = {\r\n    getUserData: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.data\r\n})\r\n\r\nexport default connect(mapStateToProps, {getUserData})(user);\r\n","import React, { Component} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport jwtDecode from 'jwt-decode';\nimport axios from 'axios';\n\n//redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { SET_AUTHENTICATED } from './redux/type';\nimport { logoutUser, getUserData } from './redux/actions/userActions';\n\n//utilities\nimport AuthRoute from './util/AuthRoute';\n\n//components\nimport Navbar from './components/layout/Navbar';\n\n//pages\nimport home from './pages/home';\nimport login from './pages/login';\nimport signup from './pages/signup';\nimport user from './pages/user'\n\nconst theme = createMuiTheme ({\n  palette: {\n    primary: {\n      main: '#00897b',\n    },\n    secondary: {\n      main: '#ff80ab',\n    },\n  },\n});\n\naxios.defaults.baseURL = 'https://asia-northeast1-vlogdat-v2.cloudfunctions.net/api';\n\n//token management logging out and in\nconst token = localStorage.FBIdToken;\nif (token) {\n  const decodedToken = jwtDecode(token); //decode the token(npm install --save jwt-decode)\n  console.log(decodedToken);\n  if(decodedToken.exp * 1000 < Date.now()) { //compares the time from now for expiring\n    store.dispatch(logoutUser())\n    window.location.href = '/login';\n  } else {\n    store.dispatch({ type: SET_AUTHENTICATED });\n    axios.defaults.headers.common['AUTHORIZATION'] = token;\n    store.dispatch( getUserData());\n  }\n\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store = {store}>\n          <div className=\"App\">\n            <Router >\n              <Navbar/>\n              <Switch>\n                <div className= \"container\">\n                  <Route exact path='/' component={home} />\n                  <Route exact path=\"/home\" component={home}/>\n                  <AuthRoute exact path=\"/login\" component={login} />\n                  <AuthRoute exact path=\"/signup\" component={signup} />\n                  <Route exact path=\"/users/:handle\" component={user} />\n                  <Route exact path=\"/users/:handle/post/:postId\" component={user} />\n                </div>\n              </Switch>\n            </Router>\n          </div>\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default (App);\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/no-image.5a021ab9.png\";"],"sourceRoot":""}